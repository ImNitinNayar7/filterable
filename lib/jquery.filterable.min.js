/**
 * filterable
 * jQuery plugin that filters an HTML table based on column-specific values using x-editable
 *
 * @author Daniel White
 * @copyright Daniel White 2013
 * @license MIT <https://github.com/lightswitch05/filterable/blob/master/MIT-LICENSE>
 * @link https://github.com/lightswitch05/filterable
 * @module filterable
 * @version 0.0.1
 */
(function(e){e.fn.filterable=function(t){var n={ignoreColumns:[],onlyColumns:null};t=e.extend(n,t);var r=function(e){return e!==undefined&&e!==null?!0:!1},i=function(e,t){var n=new RegExp(".*"+e+".*","i");return n.test(t)===!0},s=function(t,n){var r=n.closest("table"),s=n.data("name");r.children("tbody,*").children("tr").each(function(n,r){if(n!==0){var o=e(r).children("td").eq(s),u=e.trim(o.text());i(t,u)?o.closest("tr").show():o.closest("tr").hide()}})},o=function(t){e(t).editable({send:"never",type:"text",emptytext:"",display:function(){e(this).text("")}})},u=function(e){e.on("save",function(t,n){s(n.newValue,e)})},a=function(e,t){var n="Enter filter for "+e.text(),r=' <i class="icon-filter" data-name="'+t+'" title="'+n+'"></i>';return r=e.append(r).find("i.icon-filter"),o(r),r},f=function(n){return r(t.onlyColumns)?e.inArray(n,t.onlyColumns)===-1:e.inArray(n,t.ignoreColumns)!==-1},l=function(t){var n=t.find("tr:first").first(),r={};return e(n).children("td,th").each(function(t,n){f(t)||(r[t]=e(n))}),r},c=l(this);e.each(c,function(e,t){var n=a(t,e);u(n)})}})(jQuery);