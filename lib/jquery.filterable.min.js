/**
 * filterable
 * jQuery plugin that filters an HTML table based on column-specific values using x-editable
 *
 * @author Daniel White
 * @copyright Daniel White 2013
 * @license MIT <https://github.com/lightswitch05/filterable/blob/master/MIT-LICENSE>
 * @link http://lightswitch05.github.io/filterable
 * @module filterable
 * @version 0.2.0
 */
(function(e){"use strict";e.fn.filterableutils={isNull:function(e){return e===undefined||e===null?!0:!1},notNull:function(e){return!this.isNull(e)}}})(jQuery),function(e){"use strict";var t=function(t,n){this.$cell=e(t),this.options=e.extend({},e.fn.filterableCell.defaults,n),this.match=null,this.init()};t.prototype={constructor:t,value:function(){return this.$cell.text()},setMatch:function(e){e?(this.$cell.addClass("filterable-match"),this.$cell.removeClass("filterable-mismatch")):(this.$cell.addClass("filterable-mismatch"),this.$cell.removeClass("filterable-match"))},isMatch:function(e){if(typeof this.options.isMatch=="function")this.match=this.options.isMatch(this.$cell,e);else{e=e.replace(/[\-\[\]\/\{\}\(\)\+\?\.\\\^\$\|]/g,"\\$&"),e=e.replace(/\*/,".*"),e=".*"+e+".*";var t=this.options.ignoreCase?"i":"",n=new RegExp(e,t);this.match=n.test(this.value())===!0}return this.setMatch(this.match),this.match},init:function(){this.$cell.addClass("filterable-cell"),e.proxy(function(){this.$element.triggerHandler("init",this)},this)},destroy:function(){this.$cell.removeClass("filterable-cell filterable-match filterable-mismatch"),this.$cell.removeData("fitlerableCell")}},e.fn.filterableCell=function(n){var r=arguments,i="filterableCell";return this.each(function(){var s=e(this),o=s.data(i),u=typeof n=="object"&&n;o||s.data(i,o=new t(this,u)),typeof n=="string"&&o[n].apply(o,Array.prototype.slice.call(r,1))})},e.fn.filterableCell.defaults={isMatch:null}}(jQuery),function(e){"use strict";var t=function(t,n){this.$row=e(t),this.cells=[],this.options=e.extend({},e.fn.filterableRow.defaults,n),this.init()};t.prototype={constructor:t,cell:function(e){return this.cells[e]},setMatch:function(e){e?(this.$row.addClass("filterable-match"),this.$row.removeClass("filterable-mismatch")):(this.$row.addClass("filterable-mismatch"),this.$row.removeClass("filterable-match"))},hasMismatch:function(){var t=!1;return e.each(this.cells,e.proxy(function(n,r){if(e.fn.filterableutils.notNull(r)&&r.match===!1){t=!0;return}},this)),t},filter:function(e,t){this.cells[t].isMatch(e),this.setMatch(!this.hasMismatch())},ignoredColumn:function(t){return e.fn.filterableutils.notNull(this.options.onlyColumns)?e.inArray(t,this.options.onlyColumns)===-1:e.inArray(t,this.options.ignoreColumns)!==-1},init:function(){this.$row.addClass("filterable-row");var t;this.$row.children("td").each(e.proxy(function(n,r){this.ignoredColumn(n)?t=null:(e(r).filterableCell(this.options),t=e(r).data("filterableCell")),this.cells.push(t)},this)),e.proxy(function(){this.$row.triggerHandler("init",this)},this)},destroy:function(){this.$row.removeClass("filterable-row filterable-match filterable-mismatch"),this.$row.removeData("fitlerableRow")}},e.fn.filterableRow=function(n){var r=arguments,i="filterableRow";return this.each(function(){var s=e(this),o=s.data(i),u=typeof n=="object"&&n;o||s.data(i,o=new t(this,u)),typeof n=="string"&&o[n].apply(o,Array.prototype.slice.call(r,1))})},e.fn.filterableRow.defaults={}}(jQuery),function(e){"use strict";var t=function(t,n){this.$element=e(t),this.rows=null,this.options=e.extend({},e.fn.filterable.defaults,n),this.init()};t.prototype={constructor:t,ignoredColumn:function(t){return e.fn.filterableutils.notNull(this.options.onlyColumns)?e.inArray(t,this.options.onlyColumns)===-1:e.inArray(t,this.options.ignoreColumns)!==-1},initRows:function(){this.rows=[],this.$element.children("tbody,*").children("tr").each(e.proxy(function(t,n){t!==0&&(e(n).filterableRow(this.options),this.rows.push(e(n).data("filterableRow")))},this))},typeaheadValues:function(t){var n={};return e.fn.filterableutils.isNull(this.rows)&&this.initRows(),e.each(this.rows,e.proxy(function(e,r){n[r.cell(t).value()]=""},this)),Object.keys(n)},filter:function(t,n){e.fn.filterableutils.isNull(this.rows)&&this.initRows(),e.each(this.rows,e.proxy(function(e,r){r.filter(t,n)},this))},initEditable:function(t,n){var r=this;e(t).editable(e.extend({send:"never",type:"typeahead",emptytext:"",value:"",title:"Enter filter for "+e(t).text(),display:function(){},source:r.typeaheadValues(n)},this.options.editableOptions)),e(t).on("save.editable",e.proxy(function(r,i){i.newValue===""?e(t).removeClass("filterable-active"):e(t).addClass("filterable-active"),this.filter(i.newValue,n)},this))},init:function(){this.$element.addClass("filterable"),this.$element.find("tr:first").first().children("td,th").each(e.proxy(function(t,n){if(!this.ignoredColumn(t)){var r;e.fn.filterableutils.notNull(this.options.editableSelector)?r=e(n).find(this.options.editableSelector):(r=e(n).wrapInner("<div />").children().first(),e(r).data(e(n).data())),this.initEditable(r,t);var i=String(e(r).editable("getValue",!0));i!==""&&this.filter(i,t)}},this)),e.proxy(function(){this.$element.triggerHandler("init",this)},this)},destroy:function(){this.$element.removeClass("filterable"),this.$element.removeData("fitlerable")}},e.fn.filterable=function(n){var r=arguments,i="filterable";return this.each(function(){var s=e(this),o=s.data(i),u=typeof n=="object"&&n;o||s.data(i,o=new t(this,u)),typeof n=="string"&&o[n].apply(o,Array.prototype.slice.call(r,1))})},e.fn.filterable.defaults={ignoreColumns:[],onlyColumns:null,ignoreCase:!0,editableOptions:null,editableSelector:null}}(jQuery);